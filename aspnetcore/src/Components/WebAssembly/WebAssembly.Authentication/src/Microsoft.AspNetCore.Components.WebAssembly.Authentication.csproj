<Project Sdk="Microsoft.NET.Sdk.Razor">

  <Import Project="Sdk.props" Sdk="Yarn.MSBuild" Condition=" '$(DotNetBuildFromSource)' != 'true'" />

  <PropertyGroup>
    <TargetFramework>$(DefaultNetCoreTargetFramework)</TargetFramework>
    <Description>Build client-side authentication for single-page applications (SPAs).</Description>
    <IsShippingPackage>true</IsShippingPackage>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <IsTrimmable>true</IsTrimmable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <EnableAOTAnalyzer>false</EnableAOTAnalyzer>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="Microsoft.AspNetCore.Components.Authorization" />
    <Reference Include="Microsoft.AspNetCore.Components.Web" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Microsoft.AspNetCore.Components.WebAssembly.Authentication.Tests" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="$(SharedSourceRoot)LinkerFlags.cs" LinkBase="Shared" />
  </ItemGroup>

  <PropertyGroup>
    <YarnWorkingDir>$(MSBuildThisFileDirectory)Interop\</YarnWorkingDir>
    <ResolveStaticWebAssetsInputsDependsOn>
      CompileInterop;
      IncludeCompileInteropOutput;
      $(ResolveStaticWebAssetsInputsDependsOn)
    </ResolveStaticWebAssetsInputsDependsOn>
  </PropertyGroup>

  <ItemGroup>
    <YarnInputs Include="$(YarnWorkingDir)**" Exclude="$(YarnWorkingDir)node_modules\**;$(YarnWorkingDir)*.d.ts;$(YarnWorkingDir)dist\**" />
    <YarnOutputs Include="$(YarnWorkingDir)dist\$(Configuration)\AuthenticationService.js" />

    <Content Remove="$(YarnWorkingDir)**" />
    <None Include="$(YarnWorkingDir)*" Exclude="$(YarnWorkingDir)node_modules\**" />

    <UpToDateCheckInput Include="@(YarnInputs)" Exclude="$(YarnWorkingDir)package.json" Set="StaticWebassets" />
    <UpToDateCheckOutput Include="@(YarnOutputs)" Set="StaticWebassets" />
  </ItemGroup>

  <Target Name="_CreateInteropHash" BeforeTargets="CompileInterop" Condition="'$(BuildNodeJS)' != 'false' AND '$(DesignTimeBuild)' != 'true'">

    <PropertyGroup>
      <InteropCompilationCacheFile>$(IntermediateOutputPath)interop.cache</InteropCompilationCacheFile>
    </PropertyGroup>

    <Hash ItemsToHash="@(YarnInputs)">
      <Output TaskParameter="HashResult" PropertyName="_YarnInputsHash" />
    </Hash>

     <WriteLinesToFile Lines="$(_YarnInputsHash)" File="$(InteropCompilationCacheFile)" Overwrite="True" WriteOnlyWhenDifferent="True" />

    <ItemGroup>
      <FileWrites Include="$(InteropCompilationCacheFile)" />
    </ItemGroup>

  </Target>

  <Target Name="CompileInterop" Condition="'$(BuildNodeJS)' != 'false' AND '$(DesignTimeBuild)' != 'true'" Inputs="$(InteropCompilationCacheFile)" Outputs="@(YarnOutputs)">
    <!-- Retry yarn install if first one fails -->
    <Yarn Command="install --mutex network $(InstallArgs) --frozen-lockfile"
          WorkingDirectory="$(YarnWorkingDir)"
          IgnoreStandardErrorWarningFormat="$(IgnoreYarnWarnings)"
          IgnoreExitCode="true">
            <Output TaskParameter="ExitCode" PropertyName="_LocalYarnExitCode" />
    </Yarn>
    <Yarn Command="install --mutex network $(InstallArgs) --frozen-lockfile"
          WorkingDirectory="$(YarnWorkingDir)"
          IgnoreStandardErrorWarningFormat="$(IgnoreYarnWarnings)"
          Condition="'$(_LocalYarnExitCode)' != '0'" />
    <Yarn Command="run build:production" WorkingDirectory="$(YarnWorkingDir)" Condition="'$(Configuration)' == 'Release'" IgnoreStandardErrorWarningFormat="$(IgnoreYarnWarnings)" />
    <Yarn Command="run build:debug" WorkingDirectory="$(YarnWorkingDir)" Condition="'$(Configuration)' == 'Debug'" IgnoreStandardErrorWarningFormat="$(IgnoreYarnWarnings)" />

    <Message Importance="high" Text="@(_InteropBuildOutput->'Emitted %(FullPath)')" />

  </Target>

  <Target Name="IncludeCompileInteropOutput">
    <ItemGroup>
      <_InteropBuildOutput Include="$(YarnWorkingDir)dist\$(Configuration)\**" Exclude="$(YarnWorkingDir)dist\.gitignore" />
    </ItemGroup>

    <DefineStaticWebAssets Condition="'@(_InteropBuildOutput)' != ''" SourceType="Computed" SourceId="$(PackageId)" ContentRoot="$(YarnWorkingDir)dist\$(Configuration)\" BasePath="_content/$(PackageId)" CandidateAssets="@(_InteropBuildOutput)" RelativePathFilter="**.js">
      <Output TaskParameter="Assets" ItemName="StaticWebAsset" />
    </DefineStaticWebAssets>

    <ItemGroup>
      <_InteropBuildOutput Include="$(YarnWorkingDir)dist\$(Configuration)\**" Exclude="$(YarnWorkingDir)dist\.gitignore" />
      <FileWrites Include="$(_InteropBuildOutput)" />
    </ItemGroup>
  </Target>

  <Import Project="Sdk.targets" Sdk="Yarn.MSBuild" Condition=" '$(DotNetBuildFromSource)' != 'true'" />

  <ItemGroup>
    <InternalsVisibleTo Include="Microsoft.AspNetCore.Blazor.Tests" />
  </ItemGroup>
</Project>
