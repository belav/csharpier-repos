<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>$(DefaultNetCoreTargetFramework)</TargetFramework>
    <Description>Build client-side single-page applications (SPAs) with Blazor running under WebAssembly.</Description>
    <NoWarn>$(NoWarn);BL0006</NoWarn>
    <!-- Workaround for https://github.com/dotnet/runtime/issues/52227 -->
    <NoWarn>$(NoWarn);CS8603</NoWarn>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <Nullable>enable</Nullable>
    <IsTrimmable>true</IsTrimmable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="Microsoft.AspNetCore.Components.Web" />
    <Reference Include="Microsoft.Extensions.Configuration.Json" />
    <Reference Include="Microsoft.Extensions.Configuration.Binder" />
    <Reference Include="Microsoft.Extensions.Logging" />
    <Reference Include="Microsoft.JSInterop.WebAssembly" />

    <ProjectReference Include="..\..\..\Web.JS\Microsoft.AspNetCore.Components.Web.JS.npmproj"
      Condition="'$(BuildNodeJS)' != 'false' and '$(BuildingInsideVisualStudio)' != 'true'"
      Private="false"
      ReferenceOutputAssembly="false"
      SkipGetTargetFrameworkProperties="true"
      UndefineProperties="TargetFramework" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="$(ComponentsSharedSourceRoot)src\BrowserNavigationManagerInterop.cs" />
    <Compile Include="$(ComponentsSharedSourceRoot)src\PullFromJSDataStream.cs" />
    <Compile Include="$(ComponentsSharedSourceRoot)src\TransmitDataStreamToJS.cs" />
    <Compile Include="$(ComponentsSharedSourceRoot)src\JsonSerializerOptionsProvider.cs" />
    <Compile Include="$(ComponentsSharedSourceRoot)src\ElementReferenceJsonConverter.cs" />
    <Compile Include="$(ComponentsSharedSourceRoot)src\ComponentParametersTypeCache.cs" />
    <Compile Include="$(ComponentsSharedSourceRoot)src\RootComponentTypeCache.cs" />
    <Compile Include="$(SharedSourceRoot)Components\WebAssemblyComponentSerializationSettings.cs" Link="Prerendering/WebAssemblyComponentSerializationSettings.cs" />
    <Compile Include="$(SharedSourceRoot)Components\WebAssemblyComponentMarker.cs" Link="Prerendering/WebAssemblyComponentMarker.cs" />
    <Compile Include="$(SharedSourceRoot)Components\ComponentParameter.cs" Link="Prerendering/ComponentParameter.cs" />
    <Compile Include="$(SharedSourceRoot)Components\PrerenderComponentApplicationStore.cs" />
    <Compile Include="$(SharedSourceRoot)LinkerFlags.cs" LinkBase="Shared" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Microsoft.AspNetCore.Components.WebAssembly.Tests" />
    <InternalsVisibleTo Include="Microsoft.AspNetCore.Components.WebAssembly.Authentication.Tests" />
    <InternalsVisibleTo Include="BasicTestApp" />
  </ItemGroup>

  <PropertyGroup>
    <!-- Microsoft.AspNetCore.Components.Web.JS.npmproj always capitalizes the directory name. -->
    <BlazorWebAssemblyJSFile Condition=" '$(Configuration)' == 'Debug' ">..\..\..\Web.JS\dist\Debug\blazor.webassembly.js</BlazorWebAssemblyJSFile>
    <BlazorWebAssemblyJSFile Condition=" '$(Configuration)' != 'Debug' ">..\..\..\Web.JS\dist\Release\blazor.webassembly.js</BlazorWebAssemblyJSFile>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="$(BlazorWebAssemblyJSFile)" Pack="true" PackagePath="build\$(DefaultNetCoreTargetFramework)\" LinkBase="build\$(DefaultNetCoreTargetFramework)\" />
    <Content Include="targets\*.props" Pack="true" PackagePath="build\$(DefaultNetCoreTargetFramework)\" />
  </ItemGroup>

  <!-- blazor.webassembly.js should exist after Microsoft.AspNetCore.Components.Web.JS.npmproj builds. -->
  <Target Name="_CheckBlazorServerJSPath" BeforeTargets="GenerateNuspec" DependsOnTargets="ResolveProjectReferences" Condition=" '$(IsPackable)' == 'true' ">
    <Error Text="'$(BlazorWebAssemblyJSFile)' does not exist. Enable NodeJS to pack this project." Condition=" !EXISTS('$(BlazorWebAssemblyJSFile)') " />
  </Target>

  <ItemGroup>
    <InternalsVisibleTo Include="DynamicProxyGenAssembly2" Key="$(MoqPublicKey)" />
  </ItemGroup>
</Project>
