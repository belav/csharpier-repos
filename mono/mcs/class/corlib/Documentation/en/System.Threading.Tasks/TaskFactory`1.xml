<?xml version="1.0" encoding="utf-8"?>
<Type Name="TaskFactory<TResult>" FullName="System.Threading.Tasks.TaskFactory<TResult>">
  <TypeSignature Language="C#" Value="public class TaskFactory<TResult>" />
  <TypeSignature
    Language="ILAsm"
    Value=".class public auto ansi beforefieldinit TaskFactory`1<TResult> extends System.Object"
  />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResult">To be added.</typeparam>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para
        >The <see
         cref="T:System.Threading.Tasks.TaskFactory`1" />

         class encodes some common <see
         cref="T:System.Threading.Tasks.Task`1" />

         patterns into methods that pick up default settings, which are configurable through its constructors.</para
      >
      <para
        >A default instance of <see
         cref="T:System.Threading.Tasks.TaskFactory`1" />

         is available through the <see
         cref="P:System.Threading.Tasks.Task`1.Factory" />

         property.</para
      >
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para
        >Provides support for creating and scheduling <see
         cref="T:System.Threading.Tasks.Task`1" />

         objects.</para
      >
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory ();" />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed"
      />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >This constructor creates a <see
             cref="T:System.Threading.Tasks.TaskFactory`1" />

             instance with a default configuration. The <see
             cref="T:System.Threading.Tasks.TaskCreationOptions" />

             property is initialized to <see
             cref="F:System.Threading.Tasks.TaskCreationOptions.None" />

            , the <see
             cref="T:System.Threading.Tasks.TaskContinuationOptions" />

             property is initialized to <see
             cref="F:System.Threading.Tasks.TaskContinuationOptions.None" />

            , and the <see
             cref="T:System.Threading.Tasks.TaskScheduler" />

             property is initialized to the current scheduler (see <see
             cref="P:System.Threading.Tasks.TaskScheduler.Current" />

            ).</para
          >
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >Initializes a <see
             cref="T:System.Threading.Tasks.TaskFactory`1" />

             instance with the default configuration.</para
          >
        </summary>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature
        Language="C#"
        Value="public TaskFactory (System.Threading.CancellationToken cancellationToken);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken) cil managed"
      />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >This constructor creates a <see
             cref="T:System.Threading.Tasks.TaskFactory`1" />

             instance with a default configuration. The <see
             cref="T:System.Threading.Tasks.TaskCreationOptions" />

             property is initialized to <see
             cref="F:System.Threading.Tasks.TaskCreationOptions.None" />

            , the <see
             cref="T:System.Threading.Tasks.TaskContinuationOptions" />

             property is initialized to <see
             cref="F:System.Threading.Tasks.TaskContinuationOptions.None" />

            , and the <see
             cref="T:System.Threading.Tasks.TaskScheduler" />

             property is initialized to the current scheduler (see <see
             cref="P:System.Threading.Tasks.TaskScheduler.Current" />

            ).</para
          >
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >Initializes a <see
             cref="T:System.Threading.Tasks.TaskFactory`1" />

             instance with the default configuration.</para
          >
        </summary>
        <param name="cancellationToken">
          <attribution license="cc4" from="Microsoft" modified="false" />

          The default cancellation token that will be assigned to tasks created by this <see
           cref="T:System.Threading.Tasks.TaskFactory" />

           unless another cancellation token is explicitly specified when calling the factory methods.</param
        >
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature
        Language="C#"
        Value="public TaskFactory (System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >With this constructor, the <see
             cref="T:System.Threading.Tasks.TaskCreationOptions" />

             property is initialized to <see
             cref="F:System.Threading.Tasks.TaskCreationOptions.None" />

            , the <see
             cref="T:System.Threading.Tasks.TaskContinuationOptions" />

             property is initialized to <see
             cref="F:System.Threading.Tasks.TaskContinuationOptions.None" />

            , and the <see
             cref="T:System.Threading.Tasks.TaskScheduler" />

             property is initialized to <paramref
             name="scheduler" />

            , unless it's null, in which case the property is initialized to the current scheduler (see <see
             cref="P:System.Threading.Tasks.TaskScheduler.Current" />

            ).</para
          >
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >Initializes a <see
             cref="T:System.Threading.Tasks.TaskFactory`1" />

             instance with the specified configuration.</para
          >
        </summary>
        <param name="scheduler">
          <attribution license="cc4" from="Microsoft" modified="false" />

          The scheduler to use to schedule any tasks created with this <see
           cref="T:System.Threading.Tasks.TaskFactory`1" />

          . A null value indicates that the current <see
           cref="T:System.Threading.Tasks.TaskScheduler" />

           should be used.</param
        >
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature
        Language="C#"
        Value="public TaskFactory (System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed"
      />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >With this constructor, the <see
             cref="T:System.Threading.Tasks.TaskCreationOptions" />

             property is initialized to <paramref
             name="creationOptions" />

            , the <see
             cref="T:System.Threading.Tasks.TaskContinuationOptions" />

             property is initialized to <paramref
             name="continuationOptions" />

            , and the <see
             cref="T:System.Threading.Tasks.TaskScheduler" />

             property is initialized to the current scheduler (see <see
             cref="P:System.Threading.Tasks.TaskScheduler.Current" />

            ).</para
          >
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >Initializes a <see
             cref="T:System.Threading.Tasks.TaskFactory`1" />

             instance with the specified configuration.</para
          >
        </summary>
        <param name="creationOptions">
          <attribution license="cc4" from="Microsoft" modified="false" />

          The default options to use when creating tasks with this <see
           cref="T:System.Threading.Tasks.TaskFactory`1" />

          .</param
        >
        <param name="continuationOptions">
          <attribution license="cc4" from="Microsoft" modified="false" />

          The default options to use when creating continuation tasks with this <see
           cref="T:System.Threading.Tasks.TaskFactory`1" />

          .</param
        >
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature
        Language="C#"
        Value="public TaskFactory (System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >With this constructor, the <see
             cref="T:System.Threading.Tasks.TaskCreationOptions" />

             property is initialized to <paramref
             name="creationOptions" />

            , the <see
             cref="T:System.Threading.Tasks.TaskContinuationOptions" />

             property is initialized to <paramref
             name="continuationOptions" />

            , and the <see
             cref="T:System.Threading.Tasks.TaskScheduler" />

             property is initialized to <paramref
             name="scheduler" />

            , unless it's null, in which case the property is initialized to the current scheduler (see <see
             cref="P:System.Threading.Tasks.TaskScheduler.Current" />

            ).</para
          >
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >Initializes a <see
             cref="T:System.Threading.Tasks.TaskFactory`1" />

             instance with the specified configuration.</para
          >
        </summary>
        <param name="cancellationToken">
          <attribution license="cc4" from="Microsoft" modified="false" />

          The default cancellation token that will be assigned to tasks created by this <see
           cref="T:System.Threading.Tasks.TaskFactory" />

           unless another cancellation token is explicitly specified when calling the factory methods.</param
        >
        <param name="creationOptions">
          <attribution license="cc4" from="Microsoft" modified="false" />

          The default options to use when creating tasks with this <see
           cref="T:System.Threading.Tasks.TaskFactory`1" />

          .</param
        >
        <param name="continuationOptions">
          <attribution license="cc4" from="Microsoft" modified="false" />

          The default options to use when creating continuation tasks with this <see
           cref="T:System.Threading.Tasks.TaskFactory`1" />

          .</param
        >
        <param name="scheduler">
          <attribution license="cc4" from="Microsoft" modified="false" />

          The default scheduler to use to schedule any tasks created with this <see
           cref="T:System.Threading.Tasks.TaskFactory`1" />

          . A null value indicates that <see
           cref="P:System.Threading.Tasks.TaskScheduler.Current" />

           should be used.</param
        >
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.CancellationToken CancellationToken { get; }"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".property instance valuetype System.Threading.CancellationToken CancellationToken"
      />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >This property returns the default cancellation token that will be assigned to all tasks created by this factory unless another cancellation token value is explicitly specified during the call to the task factory methods.</para
          >
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the default cancellation token for this task factory.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ContinuationOptions">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.TaskContinuationOptions ContinuationOptions { get; }"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".property instance valuetype System.Threading.Tasks.TaskContinuationOptions ContinuationOptions"
      />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >This property returns the default continuation options for this factory. They will be used to create all continuation tasks unless other options are explicitly specified during calls to this factory's methods.</para
          >
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >Gets the <see
             cref="T:System.Threading.Tasks.TaskContinuationOptions" />

             enumeration value for this task factory.</para
          >
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task[],TResult> continuationFunction);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2<class System.Threading.Tasks.Task[], !TResult> continuationFunction) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task[],TResult>"
        />
      </Parameters>
      <Docs>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task[],TResult> continuationFunction, System.Threading.CancellationToken cancellationToken);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2<class System.Threading.Tasks.Task[], !TResult> continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task[],TResult>"
        />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task[],TResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2<class System.Threading.Tasks.Task[], !TResult> continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task[],TResult>"
        />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
      </Parameters>
      <Docs>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task[],TResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2<class System.Threading.Tasks.Task[], !TResult> continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task[],TResult>"
        />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <param name="scheduler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll<TAntecedentResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult> continuationFunction);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAll<TAntecedentResult>(class System.Threading.Tasks.Task`1<!!TAntecedentResult>[] tasks, class System.Func`2<class System.Threading.Tasks.Task`1<!!TAntecedentResult>[], !TResult> continuationFunction) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task<TAntecedentResult>[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult>"
        />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">To be added.</typeparam>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll<TAntecedentResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult> continuationFunction, System.Threading.CancellationToken cancellationToken);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAll<TAntecedentResult>(class System.Threading.Tasks.Task`1<!!TAntecedentResult>[] tasks, class System.Func`2<class System.Threading.Tasks.Task`1<!!TAntecedentResult>[], !TResult> continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task<TAntecedentResult>[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult>"
        />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">To be added.</typeparam>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll<TAntecedentResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAll<TAntecedentResult>(class System.Threading.Tasks.Task`1<!!TAntecedentResult>[] tasks, class System.Func`2<class System.Threading.Tasks.Task`1<!!TAntecedentResult>[], !TResult> continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task<TAntecedentResult>[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult>"
        />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">To be added.</typeparam>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll<TAntecedentResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAll<TAntecedentResult>(class System.Threading.Tasks.Task`1<!!TAntecedentResult>[] tasks, class System.Func`2<class System.Threading.Tasks.Task`1<!!TAntecedentResult>[], !TResult> continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task<TAntecedentResult>[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult>"
        />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">To be added.</typeparam>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <param name="scheduler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task,TResult> continuationFunction);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2<class System.Threading.Tasks.Task, !TResult> continuationFunction) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task,TResult>"
        />
      </Parameters>
      <Docs>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task,TResult> continuationFunction, System.Threading.CancellationToken cancellationToken);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2<class System.Threading.Tasks.Task, !TResult> continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task,TResult>"
        />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task,TResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2<class System.Threading.Tasks.Task, !TResult> continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task,TResult>"
        />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
      </Parameters>
      <Docs>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task,TResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2<class System.Threading.Tasks.Task, !TResult> continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task,TResult>"
        />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <param name="scheduler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny<TAntecedentResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult> continuationFunction);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAny<TAntecedentResult>(class System.Threading.Tasks.Task`1<!!TAntecedentResult>[] tasks, class System.Func`2<class System.Threading.Tasks.Task`1<!!TAntecedentResult>, !TResult> continuationFunction) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task<TAntecedentResult>[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult>"
        />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">To be added.</typeparam>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny<TAntecedentResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult> continuationFunction, System.Threading.CancellationToken cancellationToken);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAny<TAntecedentResult>(class System.Threading.Tasks.Task`1<!!TAntecedentResult>[] tasks, class System.Func`2<class System.Threading.Tasks.Task`1<!!TAntecedentResult>, !TResult> continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task<TAntecedentResult>[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult>"
        />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">To be added.</typeparam>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny<TAntecedentResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAny<TAntecedentResult>(class System.Threading.Tasks.Task`1<!!TAntecedentResult>[] tasks, class System.Func`2<class System.Threading.Tasks.Task`1<!!TAntecedentResult>, !TResult> continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task<TAntecedentResult>[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult>"
        />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">To be added.</typeparam>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny<TAntecedentResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> ContinueWhenAny<TAntecedentResult>(class System.Threading.Tasks.Task`1<!!TAntecedentResult>[] tasks, class System.Func`2<class System.Threading.Tasks.Task`1<!!TAntecedentResult>, !TResult> continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task<TAntecedentResult>[]" />
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult>"
        />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">To be added.</typeparam>
        <param name="tasks">To be added.</param>
        <param name="continuationFunction">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <param name="scheduler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreationOptions">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.TaskCreationOptions CreationOptions { get; }"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".property instance valuetype System.Threading.Tasks.TaskCreationOptions CreationOptions"
      />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskCreationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >This property returns the default creation options for this factory. They will be used to create all tasks unless other options are explicitly specified during calls to this factory's methods.</para
          >
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >Gets the <see
             cref="T:System.Threading.Tasks.TaskCreationOptions" />

             enumeration value for this task factory.</para
          >
        </summary>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> FromAsync (IAsyncResult asyncResult, Func<IAsyncResult,TResult> endMethod);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> FromAsync(class System.IAsyncResult asyncResult, class System.Func`2<class System.IAsyncResult, !TResult> endMethod) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func<System.IAsyncResult,TResult>" />
      </Parameters>
      <Docs>
        <param name="asyncResult">To be added.</param>
        <param name="endMethod">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> FromAsync (Func<AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, object state);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> FromAsync(class System.Func`3<class System.AsyncCallback, object, class System.IAsyncResult> beginMethod, class System.Func`2<class System.IAsyncResult, !TResult> endMethod, object state) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter
          Name="beginMethod"
          Type="System.Func<System.AsyncCallback,System.Object,System.IAsyncResult>"
        />
        <Parameter Name="endMethod" Type="System.Func<System.IAsyncResult,TResult>" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginMethod">To be added.</param>
        <param name="endMethod">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> FromAsync (IAsyncResult asyncResult, Func<IAsyncResult,TResult> endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> FromAsync(class System.IAsyncResult asyncResult, class System.Func`2<class System.IAsyncResult, !TResult> endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func<System.IAsyncResult,TResult>" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="asyncResult">To be added.</param>
        <param name="endMethod">To be added.</param>
        <param name="creationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> FromAsync (Func<AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> FromAsync(class System.Func`3<class System.AsyncCallback, object, class System.IAsyncResult> beginMethod, class System.Func`2<class System.IAsyncResult, !TResult> endMethod, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter
          Name="beginMethod"
          Type="System.Func<System.AsyncCallback,System.Object,System.IAsyncResult>"
        />
        <Parameter Name="endMethod" Type="System.Func<System.IAsyncResult,TResult>" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="beginMethod">To be added.</param>
        <param name="endMethod">To be added.</param>
        <param name="state">To be added.</param>
        <param name="creationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> FromAsync (IAsyncResult asyncResult, Func<IAsyncResult,TResult> endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> FromAsync(class System.IAsyncResult asyncResult, class System.Func`2<class System.IAsyncResult, !TResult> endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func<System.IAsyncResult,TResult>" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="asyncResult">To be added.</param>
        <param name="endMethod">To be added.</param>
        <param name="creationOptions">To be added.</param>
        <param name="scheduler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromAsync<TArg1>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> FromAsync<TArg1> (Func<TArg1,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, object state);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> FromAsync<TArg1>(class System.Func`4<!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult> beginMethod, class System.Func`2<class System.IAsyncResult, !TResult> endMethod, !!TArg1 arg1, object state) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="beginMethod"
          Type="System.Func<TArg1,System.AsyncCallback,System.Object,System.IAsyncResult>"
        />
        <Parameter Name="endMethod" Type="System.Func<System.IAsyncResult,TResult>" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">To be added.</typeparam>
        <param name="beginMethod">To be added.</param>
        <param name="endMethod">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromAsync<TArg1>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> FromAsync<TArg1> (Func<TArg1,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> FromAsync<TArg1>(class System.Func`4<!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult> beginMethod, class System.Func`2<class System.IAsyncResult, !TResult> endMethod, !!TArg1 arg1, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="beginMethod"
          Type="System.Func<TArg1,System.AsyncCallback,System.Object,System.IAsyncResult>"
        />
        <Parameter Name="endMethod" Type="System.Func<System.IAsyncResult,TResult>" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">To be added.</typeparam>
        <param name="beginMethod">To be added.</param>
        <param name="endMethod">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="state">To be added.</param>
        <param name="creationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromAsync<TArg1,TArg2>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> FromAsync<TArg1,TArg2> (Func<TArg1,TArg2,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, TArg2 arg2, object state);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> FromAsync<TArg1, TArg2>(class System.Func`5<!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult> beginMethod, class System.Func`2<class System.IAsyncResult, !TResult> endMethod, !!TArg1 arg1, !!TArg2 arg2, object state) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="beginMethod"
          Type="System.Func<TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult>"
        />
        <Parameter Name="endMethod" Type="System.Func<System.IAsyncResult,TResult>" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">To be added.</typeparam>
        <typeparam name="TArg2">To be added.</typeparam>
        <param name="beginMethod">To be added.</param>
        <param name="endMethod">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromAsync<TArg1,TArg2>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> FromAsync<TArg1,TArg2> (Func<TArg1,TArg2,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> FromAsync<TArg1, TArg2>(class System.Func`5<!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult> beginMethod, class System.Func`2<class System.IAsyncResult, !TResult> endMethod, !!TArg1 arg1, !!TArg2 arg2, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="beginMethod"
          Type="System.Func<TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult>"
        />
        <Parameter Name="endMethod" Type="System.Func<System.IAsyncResult,TResult>" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">To be added.</typeparam>
        <typeparam name="TArg2">To be added.</typeparam>
        <param name="beginMethod">To be added.</param>
        <param name="endMethod">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <param name="state">To be added.</param>
        <param name="creationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromAsync<TArg1,TArg2,TArg3>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> FromAsync<TArg1,TArg2,TArg3> (Func<TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> FromAsync<TArg1, TArg2, TArg3>(class System.Func`6<!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult> beginMethod, class System.Func`2<class System.IAsyncResult, !TResult> endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="beginMethod"
          Type="System.Func<TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult>"
        />
        <Parameter Name="endMethod" Type="System.Func<System.IAsyncResult,TResult>" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">To be added.</typeparam>
        <typeparam name="TArg2">To be added.</typeparam>
        <typeparam name="TArg3">To be added.</typeparam>
        <param name="beginMethod">To be added.</param>
        <param name="endMethod">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <param name="arg3">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromAsync<TArg1,TArg2,TArg3>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> FromAsync<TArg1,TArg2,TArg3> (Func<TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> FromAsync<TArg1, TArg2, TArg3>(class System.Func`6<!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult> beginMethod, class System.Func`2<class System.IAsyncResult, !TResult> endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="beginMethod"
          Type="System.Func<TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult>"
        />
        <Parameter Name="endMethod" Type="System.Func<System.IAsyncResult,TResult>" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">To be added.</typeparam>
        <typeparam name="TArg2">To be added.</typeparam>
        <typeparam name="TArg3">To be added.</typeparam>
        <param name="beginMethod">To be added.</param>
        <param name="endMethod">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <param name="arg3">To be added.</param>
        <param name="state">To be added.</param>
        <param name="creationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheduler">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.TaskScheduler Scheduler { get; }"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".property instance class System.Threading.Tasks.TaskScheduler Scheduler"
      />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >This property returns the default scheduler for this factory. It will be used to schedule all tasks unless another scheduler is explicitly specified during calls to this factory's methods.</para
          >
          <para
            >If this property returns null, <see
             cref="P:System.Threading.Tasks.TaskScheduler.Current" />

             will be used.</para
          >
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the task scheduler for this task factory.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> StartNew (Func<TResult> function);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> StartNew(class System.Func`1<!TResult> function) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func<TResult>" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> StartNew (Func<object,TResult> function, object state);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> StartNew(class System.Func`2<object, !TResult> function, object state) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func<System.Object,TResult>" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> StartNew (Func<TResult> function, System.Threading.CancellationToken cancellationToken);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> StartNew(class System.Func`1<!TResult> function, valuetype System.Threading.CancellationToken cancellationToken) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func<TResult>" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> StartNew (Func<TResult> function, System.Threading.Tasks.TaskCreationOptions creationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> StartNew(class System.Func`1<!TResult> function, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func<TResult>" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="creationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> StartNew (Func<object,TResult> function, object state, System.Threading.CancellationToken cancellationToken);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> StartNew(class System.Func`2<object, !TResult> function, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func<System.Object,TResult>" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="state">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> StartNew (Func<object,TResult> function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> StartNew(class System.Func`2<object, !TResult> function, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func<System.Object,TResult>" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="state">To be added.</param>
        <param name="creationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> StartNew (Func<TResult> function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> StartNew(class System.Func`1<!TResult> function, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func<TResult>" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="creationOptions">To be added.</param>
        <param name="scheduler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TResult> StartNew (Func<object,TResult> function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!TResult> StartNew(class System.Func`2<object, !TResult> function, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func<System.Object,TResult>" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="state">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="creationOptions">To be added.</param>
        <param name="scheduler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
