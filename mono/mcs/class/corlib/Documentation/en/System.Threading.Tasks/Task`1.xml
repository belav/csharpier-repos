<?xml version="1.0" encoding="utf-8"?>
<Type Name="Task<TResult>" FullName="System.Threading.Tasks.Task<TResult>">
  <TypeSignature Language="C#" Value="public class Task<TResult> : System.Threading.Tasks.Task" />
  <TypeSignature
    Language="ILAsm"
    Value=".class public auto ansi beforefieldinit Task`1<TResult> extends System.Threading.Tasks.Task"
  />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Threading.Tasks.Task</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName
        >System.Diagnostics.DebuggerDisplay("Id = {Id}, Status = {Status}, Result = {ResultAsString}")</AttributeName
      >
    </Attribute>
    <Attribute>
      <AttributeName
        >System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.TaskDebuggerView))</AttributeName
      >
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TResult">To be added.</typeparam>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>
        <see cref="T:System.Threading.Tasks.Task`1" />

         instances may be created in a variety of ways. The most common approach is by using the task's <see
         cref="P:System.Threading.Tasks.Task`1.Factory" />

         property to retrieve a <see
         cref="T:System.Threading.Tasks.TaskFactory`1" />

         instance that can be used to create tasks for several purposes. For example, to create a <see
         cref="T:System.Threading.Tasks.Task`1" />

         that runs a function, the factory's <see

          cref="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken)"
        />

         method may be used: </para
      >
      <code
        >// C# 
var t = Task<int>.Factory.StartNew(() => GenerateResult());

' Visual Basic
Dim t = Task(Of Integer).Factory.StartNew(Function() GenerateResult()) </code
      >
      <para
        >For more complete examples, see <format
         type="text/html">
          <a href="458b5e69-5210-45e5-bc44-3888f86abd6f"
            >Task Parallelism (Task Parallel Library)</a
          >
        </format>

        .</para
      >
      <para
        >The <see
         cref="T:System.Threading.Tasks.Task`1" />

         class also provides constructors that initialize the task but that do not schedule it for execution. For performance reasons, the StartNew method should be the preferred mechanism for creating and scheduling computational tasks, but for scenarios where creation and scheduling must be separated, the constructors may be used, and the task's <see
         cref="M:System.Threading.Tasks.Task.Start" />

         method may then be used to schedule the task for execution at a later time. </para
      >
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Represents an asynchronous operation that can return a value.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func<TResult> function);" />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1<!TResult> function) cil managed"
      />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func<TResult>" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature
        Language="C#"
        Value="public Task (Func<object,TResult> function, object state);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2<object, !TResult> function, object state) cil managed"
      />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func<System.Object,TResult>" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature
        Language="C#"
        Value="public Task (Func<TResult> function, System.Threading.CancellationToken cancellationToken);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1<!TResult> function, valuetype System.Threading.CancellationToken cancellationToken) cil managed"
      />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func<TResult>" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature
        Language="C#"
        Value="public Task (Func<TResult> function, System.Threading.Tasks.TaskCreationOptions creationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1<!TResult> function, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed"
      />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func<TResult>" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="creationOptions">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature
        Language="C#"
        Value="public Task (Func<object,TResult> function, object state, System.Threading.CancellationToken cancellationToken);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2<object, !TResult> function, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed"
      />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func<System.Object,TResult>" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="state">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature
        Language="C#"
        Value="public Task (Func<object,TResult> function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2<object, !TResult> function, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed"
      />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func<System.Object,TResult>" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="state">To be added.</param>
        <param name="creationOptions">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature
        Language="C#"
        Value="public Task (Func<TResult> function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1<!TResult> function, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed"
      />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func<TResult>" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="creationOptions">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature
        Language="C#"
        Value="public Task (Func<object,TResult> function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2<object, !TResult> function, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed"
      />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func<System.Object,TResult>" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="state">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="creationOptions">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureAwait">
      <MemberSignature
        Language="C#"
        Value="public System.Runtime.CompilerServices.ConfiguredTaskAwaitable<TResult> ConfigureAwait (bool continueOnCapturedContext);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1<!TResult> ConfigureAwait(bool continueOnCapturedContext) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ConfiguredTaskAwaitable<TResult></ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continueOnCapturedContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >Configures an awaiter used to await this <see
             cref="T:System.Threading.Tasks.Task`1" />

            .</para
          >
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An object used to await this task.</para>
        </returns>
        <param name="continueOnCapturedContext">
          <attribution license="cc4" from="Microsoft" modified="false" />

          true to attempt to marshal the continuation back to the original context captured; otherwise, false.</param
        >
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>> continuationAction);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1<class System.Threading.Tasks.Task`1<!TResult>> continuationAction) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter
          Name="continuationAction"
          Type="System.Action<System.Threading.Tasks.Task<TResult>>"
        />
      </Parameters>
      <Docs>
        <param name="continuationAction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>,object> continuationAction, object state);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2<class System.Threading.Tasks.Task`1<!TResult>, object> continuationAction, object state) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter
          Name="continuationAction"
          Type="System.Action<System.Threading.Tasks.Task<TResult>,System.Object>"
        />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="continuationAction">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>> continuationAction, System.Threading.CancellationToken cancellationToken);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1<class System.Threading.Tasks.Task`1<!TResult>> continuationAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter
          Name="continuationAction"
          Type="System.Action<System.Threading.Tasks.Task<TResult>>"
        />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="continuationAction">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>> continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1<class System.Threading.Tasks.Task`1<!TResult>> continuationAction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter
          Name="continuationAction"
          Type="System.Action<System.Threading.Tasks.Task<TResult>>"
        />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
      </Parameters>
      <Docs>
        <param name="continuationAction">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>> continuationAction, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1<class System.Threading.Tasks.Task`1<!TResult>> continuationAction, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter
          Name="continuationAction"
          Type="System.Action<System.Threading.Tasks.Task<TResult>>"
        />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="continuationAction">To be added.</param>
        <param name="scheduler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>,object> continuationAction, object state, System.Threading.CancellationToken cancellationToken);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2<class System.Threading.Tasks.Task`1<!TResult>, object> continuationAction, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter
          Name="continuationAction"
          Type="System.Action<System.Threading.Tasks.Task<TResult>,System.Object>"
        />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="continuationAction">To be added.</param>
        <param name="state">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>,object> continuationAction, object state, System.Threading.Tasks.TaskContinuationOptions continuationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2<class System.Threading.Tasks.Task`1<!TResult>, object> continuationAction, object state, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter
          Name="continuationAction"
          Type="System.Action<System.Threading.Tasks.Task<TResult>,System.Object>"
        />
        <Parameter Name="state" Type="System.Object" />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
      </Parameters>
      <Docs>
        <param name="continuationAction">To be added.</param>
        <param name="state">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>,object> continuationAction, object state, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2<class System.Threading.Tasks.Task`1<!TResult>, object> continuationAction, object state, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter
          Name="continuationAction"
          Type="System.Action<System.Threading.Tasks.Task<TResult>,System.Object>"
        />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="continuationAction">To be added.</param>
        <param name="state">To be added.</param>
        <param name="scheduler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>> continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1<class System.Threading.Tasks.Task`1<!TResult>> continuationAction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter
          Name="continuationAction"
          Type="System.Action<System.Threading.Tasks.Task<TResult>>"
        />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="continuationAction">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <param name="scheduler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>,object> continuationAction, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2<class System.Threading.Tasks.Task`1<!TResult>, object> continuationAction, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter
          Name="continuationAction"
          Type="System.Action<System.Threading.Tasks.Task<TResult>,System.Object>"
        />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="continuationAction">To be added.</param>
        <param name="state">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <param name="scheduler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith<TNewResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,TNewResult> continuationFunction);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!!TNewResult> ContinueWith<TNewResult>(class System.Func`2<class System.Threading.Tasks.Task`1<!TResult>, !!TNewResult> continuationFunction) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TNewResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TResult>,TNewResult>"
        />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">To be added.</typeparam>
        <param name="continuationFunction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith<TNewResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,object,TNewResult> continuationFunction, object state);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!!TNewResult> ContinueWith<TNewResult>(class System.Func`3<class System.Threading.Tasks.Task`1<!TResult>, object, !!TNewResult> continuationFunction, object state) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TNewResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TResult>,System.Object,TNewResult>"
        />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">To be added.</typeparam>
        <param name="continuationFunction">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith<TNewResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,TNewResult> continuationFunction, System.Threading.CancellationToken cancellationToken);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!!TNewResult> ContinueWith<TNewResult>(class System.Func`2<class System.Threading.Tasks.Task`1<!TResult>, !!TNewResult> continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TNewResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TResult>,TNewResult>"
        />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">To be added.</typeparam>
        <param name="continuationFunction">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith<TNewResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,TNewResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!!TNewResult> ContinueWith<TNewResult>(class System.Func`2<class System.Threading.Tasks.Task`1<!TResult>, !!TNewResult> continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TNewResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TResult>,TNewResult>"
        />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">To be added.</typeparam>
        <param name="continuationFunction">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith<TNewResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,TNewResult> continuationFunction, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!!TNewResult> ContinueWith<TNewResult>(class System.Func`2<class System.Threading.Tasks.Task`1<!TResult>, !!TNewResult> continuationFunction, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TNewResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TResult>,TNewResult>"
        />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">To be added.</typeparam>
        <param name="continuationFunction">To be added.</param>
        <param name="scheduler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith<TNewResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,object,TNewResult> continuationFunction, object state, System.Threading.CancellationToken cancellationToken);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!!TNewResult> ContinueWith<TNewResult>(class System.Func`3<class System.Threading.Tasks.Task`1<!TResult>, object, !!TNewResult> continuationFunction, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TNewResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TResult>,System.Object,TNewResult>"
        />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">To be added.</typeparam>
        <param name="continuationFunction">To be added.</param>
        <param name="state">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith<TNewResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,object,TNewResult> continuationFunction, object state, System.Threading.Tasks.TaskContinuationOptions continuationOptions);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!!TNewResult> ContinueWith<TNewResult>(class System.Func`3<class System.Threading.Tasks.Task`1<!TResult>, object, !!TNewResult> continuationFunction, object state, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TNewResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TResult>,System.Object,TNewResult>"
        />
        <Parameter Name="state" Type="System.Object" />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">To be added.</typeparam>
        <param name="continuationFunction">To be added.</param>
        <param name="state">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith<TNewResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,object,TNewResult> continuationFunction, object state, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!!TNewResult> ContinueWith<TNewResult>(class System.Func`3<class System.Threading.Tasks.Task`1<!TResult>, object, !!TNewResult> continuationFunction, object state, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TNewResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TResult>,System.Object,TNewResult>"
        />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">To be added.</typeparam>
        <param name="continuationFunction">To be added.</param>
        <param name="state">To be added.</param>
        <param name="scheduler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith<TNewResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,TNewResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!!TNewResult> ContinueWith<TNewResult>(class System.Func`2<class System.Threading.Tasks.Task`1<!TResult>, !!TNewResult> continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TNewResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TResult>,TNewResult>"
        />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">To be added.</typeparam>
        <param name="continuationFunction">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <param name="scheduler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith<TNewResult>">
      <MemberSignature
        Language="C#"
        Value="public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,object,TNewResult> continuationFunction, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance class System.Threading.Tasks.Task`1<!!TNewResult> ContinueWith<TNewResult>(class System.Func`3<class System.Threading.Tasks.Task`1<!TResult>, object, !!TNewResult> continuationFunction, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task<TNewResult></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter
          Name="continuationFunction"
          Type="System.Func<System.Threading.Tasks.Task<TResult>,System.Object,TNewResult>"
        />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter
          Name="continuationOptions"
          Type="System.Threading.Tasks.TaskContinuationOptions"
        />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">To be added.</typeparam>
        <param name="continuationFunction">To be added.</param>
        <param name="state">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="continuationOptions">To be added.</param>
        <param name="scheduler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Factory">
      <MemberSignature
        Language="C#"
        Value="public static System.Threading.Tasks.TaskFactory<TResult> Factory { get; }"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".property class System.Threading.Tasks.TaskFactory`1<!TResult> Factory"
      />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskFactory<TResult></ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >The factory returned from <see
             cref="P:System.Threading.Tasks.Task`1.Factory" />

             is a default instance of <see
             cref="T:System.Threading.Tasks.TaskFactory`1" />

            , as would result from using the default constructor on the factory type.</para
          >
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >Provides access to factory methods for creating <see
             cref="T:System.Threading.Tasks.Task`1" />

             instances.</para
          >
        </summary>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature
        Language="C#"
        Value="public System.Runtime.CompilerServices.TaskAwaiter<TResult> GetAwaiter ();"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.TaskAwaiter`1<!TResult> GetAwaiter() cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter<TResult></ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is intended for compiler user rather than use directly in code.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >Gets an awaiter used to await this <see
             cref="T:System.Threading.Tasks.Task`1" />

            .</para
          >
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An awaiter instance.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public TResult Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TResult Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName
            >System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName
          >
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >The get accessor for this property ensures that the asynchronous operation is complete before returning. Once the result of the computation is available, it is stored and will be returned immediately on later calls to <see
             cref="P:System.Threading.Tasks.Task`1.Result" />

            .</para
          >
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >Gets the result value of this <see
             cref="T:System.Threading.Tasks.Task`1" />

            .</para
          >
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>
