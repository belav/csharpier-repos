<?xml version="1.0" encoding="utf-8"?>
<Type Name="IReadOnlyCollection<T>" FullName="System.Collections.Generic.IReadOnlyCollection<T>">
  <TypeSignature
    Language="C#"
    Value="public interface IReadOnlyCollection<out T> : System.Collections.Generic.IEnumerable<out T>"
  />
  <TypeSignature
    Language="ILAsm"
    Value=".class public interface auto ansi abstract IReadOnlyCollection`1<+ T> implements class System.Collections.Generic.IEnumerable`1<!T>, class System.Collections.IEnumerable"
  />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <remarks>To be added.</remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Represents a strongly-typed, read-only collection of elements.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the number of elements in the collection.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>
