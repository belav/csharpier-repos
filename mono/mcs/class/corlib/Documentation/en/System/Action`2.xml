<Type Name="Action<T1,T2>" FullName="System.Action<T1,T2>">
  <TypeSignature
    Language="C#"
    Value="public delegate void Action<in T1,in T2>(T1 arg1, T2 arg2);"
  />
  <TypeSignature
    Language="ILAsm"
    Value=".class public auto ansi sealed Action`2<- T1, - T2> extends System.MulticastDelegate"
  />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName
        >System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName
      >
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">To be added.</typeparam>
    <typeparam name="T2">To be added.</typeparam>
    <param name="arg1">To be added.</param>
    <param name="arg2">To be added.</param>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
