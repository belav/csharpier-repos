<?xml version="1.0" encoding="utf-8"?>
<Type Name="IExtensionCollection<T>" FullName="System.ServiceModel.IExtensionCollection<T>">
  <TypeSignature
    Language="C#"
    Value="public interface IExtensionCollection<T> : System.Collections.Generic.ICollection<System.ServiceModel.IExtension<T>>, System.Collections.Generic.IEnumerable<System.ServiceModel.IExtension<T>> where T : IExtensibleObject<T>"
  />
  <TypeSignature
    Language="ILAsm"
    Value=".class public interface auto ansi abstract IExtensionCollection`1<(class System.ServiceModel.IExtensibleObject`1<!T>) T> implements class System.Collections.Generic.ICollection`1<class System.ServiceModel.IExtension`1<!T>>, class System.Collections.Generic.IEnumerable`1<class System.ServiceModel.IExtension`1<!T>>, class System.Collections.IEnumerable"
  />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <InterfaceName>System.ServiceModel.IExtensibleObject<T></InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName
        >System.Collections.Generic.ICollection<System.ServiceModel.IExtension<T>></InterfaceName
      >
    </Interface>
    <Interface>
      <InterfaceName
        >System.Collections.Generic.IEnumerable<System.ServiceModel.IExtension<T>></InterfaceName
      >
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <remarks>To be added.</remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para
        >A collection of the <see
         cref="T:System.ServiceModel.IExtension`1" />

         objects that allow for retrieving the <see
         cref="T:System.ServiceModel.IExtension`1" />

         by its type.</para
      >
    </summary>
  </Docs>
  <Members>
    <Member MemberName="Find<E>">
      <MemberSignature Language="C#" Value="public E Find<E> ();" />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig newslot virtual instance !!E Find<E>() cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>E</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="E" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>
            <see cref="M:System.ServiceModel.IExtensionCollection`1.Find``1" />

             returns an extension that implements (is or derives from) the specified type. If more than one extension implements the specified type, one is returned. The indigo2 implementation returns the most recently added, but this is not required of implementations. If no extension implements the specified type, <see
             cref="M:System.ServiceModel.IExtensionCollection`1.Find``1" />

             returns null.</para
          >
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Finds the specified extension object in the collection.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The extension object that was found.</para>
        </returns>
        <typeparam name="E">
          <attribution license="cc4" from="Microsoft" modified="false" />

          The type of extension object.</typeparam
        >
      </Docs>
    </Member>
    <Member MemberName="FindAll<E>">
      <MemberSignature
        Language="C#"
        Value="public System.Collections.ObjectModel.Collection<E> FindAll<E> ();"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.Collection`1<!!E> FindAll<E>() cil managed"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection<E></ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="E" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >Finds all extension object in the collection specified by <paramref
             name="E" />

            .</para
          >
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para
            >A collection of all extension objects in the collection that implement the specified type.</para
          >
        </returns>
        <typeparam name="E">
          <attribution license="cc4" from="Microsoft" modified="false" />

          The type of extension object.</typeparam
        >
      </Docs>
    </Member>
  </Members>
</Type>
