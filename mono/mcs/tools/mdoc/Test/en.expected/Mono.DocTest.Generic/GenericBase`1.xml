<Type Name="GenericBase<U>" FullName="Mono.DocTest.Generic.GenericBase<U>">
  <TypeSignature Language="C#" Value="public class GenericBase<U>" />
  <TypeSignature
    Language="ILAsm"
    Value=".class public auto ansi beforefieldinit GenericBase`1<U> extends System.Object"
  />
  <TypeSignature Language="DocId" Value="T:Mono.DocTest.Generic.GenericBase`1" />
  <TypeSignature Language="VB.NET" Value="Public Class GenericBase(Of U)" />
  <TypeSignature Language="F#" Value="type GenericBase<'U> = class" />
  <TypeSignature Language="C++ CLI" Value="generic <typename U>
public ref class GenericBase" />
  <TypeSignature
    Language="C++ WINRT"
    Value="template <typename U>
[Windows::Foundation::Metadata::WebHostHidden]
class GenericBase"
  />
  <AssemblyInfo>
    <AssemblyName>DocTest</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="U" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="U">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GenericBase ();" />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed"
      />
      <MemberSignature Language="DocId" Value="M:Mono.DocTest.Generic.GenericBase`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:
 GenericBase();" />
      <MemberSignature Language="C++ CX" Value="public:
 GenericBase();" />
      <MemberSignature Language="C++ WINRT" Value=" GenericBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseMethod<S>">
      <MemberSignature Language="C#" Value="public U BaseMethod<S> (S genericParameter);" />
      <MemberSignature
        Language="ILAsm"
        Value=".method public hidebysig instance !U BaseMethod<S>(!!S genericParameter) cil managed"
      />
      <MemberSignature
        Language="DocId"
        Value="M:Mono.DocTest.Generic.GenericBase`1.BaseMethod``1(``0)"
      />
      <MemberSignature
        Language="VB.NET"
        Value="Public Function BaseMethod(Of S) (genericParameter As S) As U"
      />
      <MemberSignature
        Language="F#"
        Value="member this.BaseMethod : 'S -> 'U"
        Usage="genericBase.BaseMethod genericParameter"
      />
      <MemberSignature
        Language="C++ CLI"
        Value="public:
generic <typename S>
 U BaseMethod(S genericParameter);"
      />
      <MemberSignature
        Language="C++ CX"
        Value="public:
generic <typename S>
 U BaseMethod(S genericParameter);"
      />
      <MemberSignature
        Language="C++ WINRT"
        Value="template <typename S>
 U BaseMethod(S genericParameter);"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>U</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="S">
          <Attributes>
            <Attribute>
              <AttributeName>Mono.DocTest.Doc("S")</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="genericParameter" Type="S" />
      </Parameters>
      <Docs>
        <typeparam name="S">To be added.</typeparam>
        <param name="genericParameter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstField1">
      <MemberSignature Language="C#" Value="public const int ConstField1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ConstField1" />
      <MemberSignature Language="DocId" Value="F:Mono.DocTest.Generic.GenericBase`1.ConstField1" />
      <MemberSignature Language="VB.NET" Value="Public Const ConstField1 As Integer " />
      <MemberSignature
        Language="F#"
        Value="val mutable ConstField1 : int"
        Usage="Mono.DocTest.Generic.GenericBase<'U>.ConstField1"
      />
      <MemberSignature Language="C++ CLI" Value="public: int ConstField1;" />
      <MemberSignature Language="C++ WINRT" Value="int ConstField1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemChanged">
      <MemberSignature
        Language="C#"
        Value="public event Action<Mono.DocTest.Generic.MyList<U>,Mono.DocTest.Generic.MyList<U>.Helper<U,U>> ItemChanged;"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".event class System.Action`2<class Mono.DocTest.Generic.MyList`1<!U>, class Mono.DocTest.Generic.MyList`1/Helper`2<!U, !U, !U>> ItemChanged"
      />
      <MemberSignature Language="DocId" Value="E:Mono.DocTest.Generic.GenericBase`1.ItemChanged" />
      <MemberSignature
        Language="VB.NET"
        Value="Public Event ItemChanged As Action(Of MyList(Of U), MyList(Of U).Helper(Of U, U)) "
      />
      <MemberSignature
        Language="F#"
        Value="member this.ItemChanged : Action<Mono.DocTest.Generic.MyList<'U>, Mono.DocTest.Generic.MyList<'U>.Helper<'U, 'U>> "
        Usage="member this.ItemChanged : System.Action<Mono.DocTest.Generic.MyList<'U>, Mono.DocTest.Generic.MyList<'U>.Helper<'U, 'U>> "
      />
      <MemberSignature
        Language="C++ CLI"
        Value="public:
 event Action<Mono::DocTest::Generic::MyList<U> ^, Mono::DocTest::Generic::MyList<U>::Helper<U, U> ^> ^ ItemChanged;"
      />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Mono.DocTest.Generic.MyList&lt;U&gt;,Mono.DocTest.Generic.MyList&lt;U&gt;+Helper&lt;U,U&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MyEvent">
      <MemberSignature
        Language="C#"
        Value="public event EventHandler<Mono.DocTest.Generic.GenericBase<U>.FooEventArgs> MyEvent;"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".event class System.EventHandler`1<class Mono.DocTest.Generic.GenericBase`1/FooEventArgs<!U>> MyEvent"
      />
      <MemberSignature Language="DocId" Value="E:Mono.DocTest.Generic.GenericBase`1.MyEvent" />
      <MemberSignature
        Language="VB.NET"
        Value="Public Event MyEvent As EventHandler(Of GenericBase(Of U).FooEventArgs) "
      />
      <MemberSignature
        Language="F#"
        Value="member this.MyEvent : EventHandler<Mono.DocTest.Generic.GenericBase<'U>.FooEventArgs> "
        Usage="member this.MyEvent : System.EventHandler<Mono.DocTest.Generic.GenericBase<'U>.FooEventArgs> "
      />
      <MemberSignature
        Language="C++ CLI"
        Value="public:
 event EventHandler<Mono::DocTest::Generic::GenericBase<U>::FooEventArgs ^> ^ MyEvent;"
      />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Mono.DocTest.Generic.GenericBase&lt;U&gt;+FooEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature
        Language="C#"
        Value="public static explicit operator U (Mono.DocTest.Generic.GenericBase<U> list);"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".method public static hidebysig specialname !U op_Explicit(class Mono.DocTest.Generic.GenericBase`1<!U> list) cil managed"
      />
      <MemberSignature
        Language="DocId"
        Value="M:Mono.DocTest.Generic.GenericBase`1.op_Explicit(Mono.DocTest.Generic.GenericBase{`0})~`0"
      />
      <MemberSignature
        Language="VB.NET"
        Value="Public Shared Narrowing Operator CType (list As GenericBase(Of U)) As U"
      />
      <MemberSignature
        Language="F#"
        Value="static member op_Explicit : Mono.DocTest.Generic.GenericBase<'U> -> 'U"
        Usage="Mono.DocTest.Generic.GenericBase<'U>.op_Explicit list"
      />
      <MemberSignature
        Language="C++ CLI"
        Value="public:
 static explicit operator U(Mono::DocTest::Generic::GenericBase<U> ^ list);"
      />
      <MemberSignature
        Language="C++ WINRT"
        Value=" static explicit operator U(Mono::DocTest::Generic::GenericBase<U> const & list);"
      />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>U</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="Mono.DocTest.Generic.GenericBase<U>" />
      </Parameters>
      <Docs>
        <param name="list">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticField1">
      <MemberSignature
        Language="C#"
        Value="public static readonly Mono.DocTest.Generic.GenericBase<U> StaticField1;"
      />
      <MemberSignature
        Language="ILAsm"
        Value=".field public static initonly class Mono.DocTest.Generic.GenericBase`1<!U> StaticField1"
      />
      <MemberSignature Language="DocId" Value="F:Mono.DocTest.Generic.GenericBase`1.StaticField1" />
      <MemberSignature
        Language="VB.NET"
        Value="Public Shared ReadOnly StaticField1 As GenericBase(Of U) "
      />
      <MemberSignature
        Language="F#"
        Value=" staticval mutable StaticField1 : Mono.DocTest.Generic.GenericBase<'U>"
        Usage="Mono.DocTest.Generic.GenericBase<'U>.StaticField1"
      />
      <MemberSignature
        Language="C++ CLI"
        Value="public: static initonly Mono::DocTest::Generic::GenericBase<U> ^ StaticField1;"
      />
      <MemberSignature
        Language="C++ WINRT"
        Value="static initonly Mono::DocTest::Generic::GenericBase<U> StaticField1;"
      />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.DocTest.Generic.GenericBase&lt;U&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
