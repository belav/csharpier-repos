<Type Name="Func<TArg,TRet>" FullName="Mono.DocTest.Generic.Func<TArg,TRet>">
  <TypeSignature
    Language="C#"
    Value="public delegate TRet Func<in TArg,out TRet>(TArg a) where TArg : Exception;"
  />
  <TypeSignature
    Language="ILAsm"
    Value=".class public auto ansi sealed Func`2<(class System.Exception) - TArg, + TRet> extends System.MulticastDelegate"
  />
  <TypeSignature Language="DocId" Value="T:Mono.DocTest.Generic.Func`2" />
  <TypeSignature
    Language="VB.NET"
    Value="Public Delegate Function Func(Of In TArg, Out TRet)(a As TArg) As TRet "
  />
  <TypeSignature
    Language="F#"
    Value="type Func<'Arg, 'Ret (requires 'Arg :> Exception)> = delegate of 'Arg -> 'Ret"
  />
  <TypeSignature
    Language="C++ CLI"
    Value="generic <typename TArg, typename TRet>&#010; where TArg : Exceptionpublic delegate TRet Func(TArg a);"
  />
  <AssemblyInfo>
    <AssemblyName>DocTest</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TArg">
      <Attributes>
        <Attribute>
          <AttributeName>Mono.DocTest.Doc("arg!")</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
        <BaseTypeName>System.Exception</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TRet">
      <Attributes>
        <Attribute>
          <AttributeName>Mono.DocTest.Doc("ret!")</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>Mono.DocTest.Doc("method")</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="a" Type="TArg">
      <Attributes>
        <Attribute>
          <AttributeName>Mono.DocTest.Doc("arg-actual")</AttributeName>
        </Attribute>
      </Attributes>
    </Parameter>
  </Parameters>
  <ReturnValue>
    <ReturnType>TRet</ReturnType>
    <Attributes>
      <Attribute>
        <AttributeName>Mono.DocTest.Doc("return", Field=false)</AttributeName>
      </Attribute>
    </Attributes>
  </ReturnValue>
  <Docs>
    <typeparam name="TArg">To be added.</typeparam>
    <typeparam name="TRet">To be added.</typeparam>
    <param name="a">To be added.</param>
    <summary>To be added.</summary>
    <returns>To be added.</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
