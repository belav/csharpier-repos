<Type Name="Action<T>" FullName="System.Action<T>">
  <TypeSignature Language="C#" Value="public delegate void Action<T>(T obj);" />
  <TypeSignature
    Language="ILAsm"
    Value=".class public auto ansi sealed Action`1<T> extends System.MulticastDelegate"
  />
  <TypeSignature Language="DocId" Value="T:System.Action`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of T)(obj As T)" />
  <TypeSignature Language="F#" Value="type Action<'T> = delegate of 'T -> unit" />
  <TypeSignature
    Language="C++ CLI"
    Value="generic <typename T>&#010;public delegate void Action(T obj);"
  />
  <AssemblyInfo>
    <AssemblyName>DocTest</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="obj" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <param name="obj">To be added.</param>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
